
Proxy
Заместитель — это структурный паттерн проектирования, который позволяет подставлять вместо
реальных объектов специальные объекты-заменители. Эти объекты перехватывают вызовы к
оригинальному объекту, позволяя сделать что-то до или после передачи вызова оригиналу.


Применение паттерна
1. Ленивая инициализация (виртуальный прокси). Когда у вас есть тяжёлый объект, грузящий
данные из файловой системы или базы данных.
2. Защита доступа (защищающий прокси). Когда в программе есть разные типы пользователей
и вам хочется защищать объект от неавторизованного доступа. Например, если ваши
объекты — это важная часть операционной системы, а пользователи — сторонние
программы (хорошие или вредоносные).
3. Локальный запуск сервиса (удалённый прокси). Когда настоящий сервисный объект
находится на удалённом сервере.
4. Логирование запросов (логирующий прокси). Когда требуется хранить историю обращений
к сервисному объекту.
5. Кеширование объектов («умная» ссылка). Когда нужно кешировать результаты запросов
клиентов и управлять их жизненным циклом.

Плюсы:
• Позволяет контролировать сервисный объект незаметно для клиента.
• Может работать, даже если сервисный объект ещё не создан.
• Может контролировать жизненный цикл служебного объекта.
Минусы:
• Усложняет программу за счёт дополнительных классов.
• Увеличивает время отклика от сервиса.